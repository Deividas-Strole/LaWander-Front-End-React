{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deividas\\\\MyProjects\\\\React\\\\maps\\\\src\\\\components\\\\SpecificPlacesMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"400px\"\n};\n\n// List of 5 specific places (you can modify this)\nconst predefinedPlaces = [\"Eiffel Tower, Paris, France\", \"Statue of Liberty, New York, USA\", \"Big Ben, London, UK\", \"Colosseum, Rome, Italy\", \"Taj Mahal, Agra, India\"];\nconst SpecificPlacesMap = () => {\n  _s();\n  const [placeCoordinates, setPlaceCoordinates] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAlq7aoivZdmzARZ2dJlUg48EoBUF7cmQA\",\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: [\"places\"]\n  });\n  useEffect(() => {\n    if (isLoaded) {\n      const geocoder = new window.google.maps.Geocoder();\n      let resultsCount = 0;\n      const coordinates = [];\n      predefinedPlaces.forEach((place, index) => {\n        geocoder.geocode({\n          address: place\n        }, (results, status) => {\n          if (status === window.google.maps.GeocoderStatus.OK) {\n            const location = results[0].geometry.location;\n            coordinates.push({\n              name: place,\n              lat: location.lat(),\n              lng: location.lng()\n            });\n            resultsCount++;\n            // When all places are geocoded\n            if (resultsCount === predefinedPlaces.length) {\n              setPlaceCoordinates(coordinates);\n              // Set center to first place or calculate average\n              setCenter({\n                lat: coordinates[0].lat,\n                lng: coordinates[0].lng\n              });\n            }\n          }\n        });\n      });\n    }\n  }, [isLoaded]);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 2 // Lower zoom level to show multiple locations worldwide\n      ,\n      center: center,\n      children: placeCoordinates.map((place, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: place.lat,\n          lng: place.lng\n        },\n        label: place.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Specific Places\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: placeCoordinates.map((place, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Lat: \", place.lat.toFixed(4), \", Lng: \", place.lng.toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SpecificPlacesMap, \"j92C3IFxMOCKWwgHAijBUcG9Xvg=\", false, function () {\n  return [useLoadScript];\n});\n_c = SpecificPlacesMap;\nexport default SpecificPlacesMap;\nvar _c;\n$RefreshReg$(_c, \"SpecificPlacesMap\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","jsxDEV","_jsxDEV","mapContainerStyle","width","height","predefinedPlaces","SpecificPlacesMap","_s","placeCoordinates","setPlaceCoordinates","center","setCenter","lat","lng","isLoaded","loadError","googleMapsApiKey","libraries","geocoder","window","google","maps","Geocoder","resultsCount","coordinates","forEach","place","index","geocode","address","results","status","GeocoderStatus","OK","location","geometry","push","name","length","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","map","position","label","style","marginTop","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Deividas/MyProjects/React/maps/src/components/SpecificPlacesMap.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n};\r\n\r\n// List of 5 specific places (you can modify this)\r\nconst predefinedPlaces = [\r\n  \"Eiffel Tower, Paris, France\",\r\n  \"Statue of Liberty, New York, USA\",\r\n  \"Big Ben, London, UK\",\r\n  \"Colosseum, Rome, Italy\",\r\n  \"Taj Mahal, Agra, India\",\r\n];\r\n\r\nconst SpecificPlacesMap = () => {\r\n  const [placeCoordinates, setPlaceCoordinates] = useState([]);\r\n  const [center, setCenter] = useState({ lat: 0, lng: 0 });\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyAlq7aoivZdmzARZ2dJlUg48EoBUF7cmQA\",\r\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: [\"places\"],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      const geocoder = new window.google.maps.Geocoder();\r\n      let resultsCount = 0;\r\n      const coordinates = [];\r\n\r\n      predefinedPlaces.forEach((place, index) => {\r\n        geocoder.geocode({ address: place }, (results, status) => {\r\n          if (status === window.google.maps.GeocoderStatus.OK) {\r\n            const location = results[0].geometry.location;\r\n            coordinates.push({\r\n              name: place,\r\n              lat: location.lat(),\r\n              lng: location.lng(),\r\n            });\r\n\r\n            resultsCount++;\r\n            // When all places are geocoded\r\n            if (resultsCount === predefinedPlaces.length) {\r\n              setPlaceCoordinates(coordinates);\r\n              // Set center to first place or calculate average\r\n              setCenter({\r\n                lat: coordinates[0].lat,\r\n                lng: coordinates[0].lng,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [isLoaded]);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading maps</div>;\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={2} // Lower zoom level to show multiple locations worldwide\r\n        center={center}\r\n      >\r\n        {placeCoordinates.map((place, index) => (\r\n          <Marker\r\n            key={index}\r\n            position={{ lat: place.lat, lng: place.lng }}\r\n            label={place.name}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h2>Specific Places</h2>\r\n        <ul>\r\n          {placeCoordinates.map((place, index) => (\r\n            <li key={index}>\r\n              <strong>{place.name}</strong>\r\n              <p>\r\n                Lat: {place.lat.toFixed(4)}, Lng: {place.lng.toFixed(4)}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificPlacesMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAG,CACvB,6BAA6B,EAC7B,kCAAkC,EAClC,qBAAqB,EACrB,wBAAwB,EACxB,wBAAwB,CACzB;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAExD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGjB,aAAa,CAAC;IAC5CkB,gBAAgB,EAAE,yCAAyC;IAC3D;IACAC,SAAS,EAAE,CAAC,QAAQ;EACtB,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACd,IAAIkB,QAAQ,EAAE;MACZ,MAAMI,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC;MAClD,IAAIC,YAAY,GAAG,CAAC;MACpB,MAAMC,WAAW,GAAG,EAAE;MAEtBnB,gBAAgB,CAACoB,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACzCT,QAAQ,CAACU,OAAO,CAAC;UAAEC,OAAO,EAAEH;QAAM,CAAC,EAAE,CAACI,OAAO,EAAEC,MAAM,KAAK;UACxD,IAAIA,MAAM,KAAKZ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACW,cAAc,CAACC,EAAE,EAAE;YACnD,MAAMC,QAAQ,GAAGJ,OAAO,CAAC,CAAC,CAAC,CAACK,QAAQ,CAACD,QAAQ;YAC7CV,WAAW,CAACY,IAAI,CAAC;cACfC,IAAI,EAAEX,KAAK;cACXd,GAAG,EAAEsB,QAAQ,CAACtB,GAAG,CAAC,CAAC;cACnBC,GAAG,EAAEqB,QAAQ,CAACrB,GAAG,CAAC;YACpB,CAAC,CAAC;YAEFU,YAAY,EAAE;YACd;YACA,IAAIA,YAAY,KAAKlB,gBAAgB,CAACiC,MAAM,EAAE;cAC5C7B,mBAAmB,CAACe,WAAW,CAAC;cAChC;cACAb,SAAS,CAAC;gBACRC,GAAG,EAAEY,WAAW,CAAC,CAAC,CAAC,CAACZ,GAAG;gBACvBC,GAAG,EAAEW,WAAW,CAAC,CAAC,CAAC,CAACX;cACtB,CAAC,CAAC;YACJ;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,IAAIC,SAAS,EAAE,oBAAOd,OAAA;IAAAsC,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAI,CAAC7B,QAAQ,EAAE,oBAAOb,OAAA;IAAAsC,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7C,oBACE1C,OAAA;IAAAsC,QAAA,gBACEtC,OAAA,CAACJ,SAAS;MACRK,iBAAiB,EAAEA,iBAAkB;MACrC0C,IAAI,EAAE,CAAE,CAAC;MAAA;MACTlC,MAAM,EAAEA,MAAO;MAAA6B,QAAA,EAEd/B,gBAAgB,CAACqC,GAAG,CAAC,CAACnB,KAAK,EAAEC,KAAK,kBACjC1B,OAAA,CAACF,MAAM;QAEL+C,QAAQ,EAAE;UAAElC,GAAG,EAAEc,KAAK,CAACd,GAAG;UAAEC,GAAG,EAAEa,KAAK,CAACb;QAAI,CAAE;QAC7CkC,KAAK,EAAErB,KAAK,CAACW;MAAK,GAFbV,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eAEZ1C,OAAA;MAAK+C,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAChCtC,OAAA;QAAAsC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB1C,OAAA;QAAAsC,QAAA,EACG/B,gBAAgB,CAACqC,GAAG,CAAC,CAACnB,KAAK,EAAEC,KAAK,kBACjC1B,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAASb,KAAK,CAACW;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC7B1C,OAAA;YAAAsC,QAAA,GAAG,OACI,EAACb,KAAK,CAACd,GAAG,CAACsC,OAAO,CAAC,CAAC,CAAC,EAAC,SAAO,EAACxB,KAAK,CAACb,GAAG,CAACqC,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA,GAJGhB,KAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CA5EID,iBAAiB;EAAA,QAIWR,aAAa;AAAA;AAAAqD,EAAA,GAJzC7C,iBAAiB;AA8EvB,eAAeA,iBAAiB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}